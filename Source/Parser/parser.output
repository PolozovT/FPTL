Терминалы не используются в грамматике

   FUNNAME
   DESTNAME
   IPNAME
   FUNCVARNAME
   IFUNC
   T_FUNCTIONAL_PROGRAM
   T_IMPORT
   T_LIBRARIES
   T_INTERPRETATION
   T_FUNCTIONS
   T_ARGET
   T_ID


Грамматика

    0 $accept: FunctionalProgram $end

    1 FunctionalProgram: DataTypeDefinitionsBlocks Scheme Application
    2                  | Scheme Application

    3 DataTypeDefinitionsBlocks: DataTypeDefinitionsBlock
    4                          | DataTypeDefinitionsBlock DataTypeDefinitionsBlocks

    5 DataTypeDefinitionsBlock: T_DATA TypeName '{' TypesDefinitionList '}'
    6                         | T_DATA TypeName '[' TypeParametersList ']' '{' TypesDefinitionList '}'
    7                         | T_DATA TypeName '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'
    8                         | T_DATA TypeName '[' TypeParametersList ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    9 TypeName: NAME

   10 TypeParametersList: TypeParameterDef
   11                   | TypeParameterDef ',' TypeParametersList

   12 TypeParameterDef: TypeParameter

   13 ConstructorsDefinitionList: ConstructorDef
   14                           | ConstructorDef ConstructorsDefinitionList

   15 ConstructorDef: T_TARROW TypeName ':' CONSNAME ';'
   16               | ConstructorParametersList T_TARROW TypeName ':' CONSNAME ';'

   17 ConstructorParametersList: AtomType
   18                          | AtomType '*' ConstructorParametersList

   19 TypesDefinitionList: TypesDefinitionList2

   20 TypesDefinitionList2: TypeDefinition
   21                     | TypeDefinition TypesDefinitionList2

   22 TypeDefinition: TypeName '=' TypeExpression ';'
   23               | DataTypeDefinitionsBlock

   24 TypeDefConstructor: ConstructorParametersList '.' ConstructorName
   25                   | ConstructorName

   26 TypeExpression: TypeDefConstructor
   27               | TypeDefConstructor T_UNION TypeExpression

   28 AtomType: BaseType
   29         | TypeName
   30         | TypeName '[' TypeExpressionsList ']'
   31         | TypeParameter

   32 BaseType: T_TSTRING
   33         | T_TINT
   34         | T_TUINT
   35         | T_TSIZE
   36         | T_TFLOAT
   37         | T_TDOUBLE
   38         | T_TBOOL

   39 TypeExpressionsList: AtomType
   40                    | AtomType ',' TypeExpressionsList

   41 TypeParameter: TYPEPARAMNAME

   42 ConstructorName: CONSNAME

   43 Scheme: SchemeBegin '{' DefinitionsList '}'
   44       | SchemeBegin '[' FormalParametersList ']' '{' DefinitionsList '}'

   45 SchemeBegin: T_SCHEME NAME

   46 FormalParametersList: FormalParameter
   47                     | FormalParameter ',' FormalParametersList

   48 FormalParameter: NAME

   49 DefinitionsList: Definition
   50                | Definition DefinitionsList

   51 Definition: '@' '=' Term ';'
   52           | FuncVarName '=' Term ';'
   53           | ConstructionFun

   54 Term: VariantTerm

   55 AtomTerm: '(' Term ')'
   56         | ElementaryFunctionName
   57         | FuncObjectName
   58         | '@'

   59 FuncObjectWithParameters: NAME '(' FuncArgumentList ')'

   60 FuncArgumentList: FuncParameterName
   61                 | FuncParameterName ',' FuncArgumentList

   62 FuncParameterName: NAME
   63                  | ElementaryFunctionName
   64                  | FuncObjectWithParameters

   65 SequentialTerm: AtomTerm
   66               | SequentialTerm '.' AtomTerm

   67 CompositionTerm: SequentialTerm
   68                | CompositionTerm '*' SequentialTerm

   69 ConditionTerm: CompositionTerm
   70              | CompositionTerm T_FARROW CompositionTerm ',' ConditionTerm
   71              | CompositionTerm T_FARROW CompositionTerm

   72 VariantTerm: ConditionTerm
   73            | VariantTerm '+' ConditionTerm

   74 FuncObjectName: NAME
   75               | FuncObjectWithParameters

   76 $@1: %empty

   77 ConstructionFun: T_FUN ConstructionFunName $@1 '{' DefinitionsList '}'

   78 $@2: %empty

   79 ConstructionFun: T_FUN ConstructionFunName $@2 '[' FormalParametersList ']' '{' DefinitionsList '}'

   80 ConstructionFunName: NAME

   81 FuncVarName: NAME

   82 ElementaryFunctionName: BuiltInFunction
   83                       | Constructor
   84                       | Destructor

   85 Constructor: ConstructorName

   86 Destructor: '~' ConstructorName

   87 BuiltInFunction: BuiltInFunctionName
   88                | TupleElement
   89                | Constant

   90 TupleElement: '[' NUMBER ']'

   91 Constant: NUMBER
   92         | REALNUMBER
   93         | STRING
   94         | T_TRUE
   95         | T_FALSE

   96 BuiltInFunctionName: BFNAME

   97 Application: T_APPLICATION InterpFunProgramName
   98            | T_APPLICATION InterpFunProgramName '(' Data ')'
   99            | T_APPLICATION DataInit InterpFunProgramName
  100            | T_APPLICATION DataInit InterpFunProgramName '(' Data ')'

  101 DataInit: OneDataInit
  102         | OneDataInit DataInit

  103 OneDataInit: DataName '=' Value ';'

  104 DataName: NAME

  105 InterpFunProgramName: '%' NAME

  106 Data: OneData
  107     | OneData ',' Data

  108 OneData: DataName
  109        | Value

  110 ValueAtom: Constant
  111          | Constructor
  112          | '(' Value ')'

  113 ValueConstructor: ValueAtom
  114                 | ValueAtom '.' Constructor

  115 ValueComposition: ValueConstructor
  116                 | ValueConstructor '*' ValueComposition

  117 Value: ValueComposition


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'%' (37) 105
'(' (40) 55 59 98 100 112
')' (41) 55 59 98 100 112
'*' (42) 18 68 116
'+' (43) 73
',' (44) 11 40 47 61 70 107
'.' (46) 24 66 114
':' (58) 15 16
';' (59) 15 16 22 51 52 103
'=' (61) 22 51 52 103
'@' (64) 51 58
'[' (91) 6 8 30 44 79 90
']' (93) 6 8 30 44 79 90
'{' (123) 5 6 7 8 43 44 77 79
'}' (125) 5 6 7 8 43 44 77 79
'~' (126) 86
error (256)
NAME (258) 9 45 48 59 62 74 80 81 104 105
FUNNAME (259)
CONSNAME (260) 15 16 42
DESTNAME (261)
TYPEPARAMNAME (262) 41
IPNAME (263)
FUNCVARNAME (264)
BFNAME (265) 96
IFUNC (266)
NUMBER (267) 90 91
REALNUMBER (268) 92
STRING (269) 93
T_FUNCTIONAL_PROGRAM (270)
T_IMPORT (271)
T_LIBRARIES (272)
T_SCHEME (273) 45
T_INTERPRETATION (274)
T_APPLICATION (275) 97 98 99 100
T_DATA (276) 5 6 7 8
T_CONSTRUCTORS (277) 7 8
T_FUN (278) 77 79
T_FUNCTIONS (279)
T_TSTRING (280) 32
T_TINT (281) 33
T_TUINT (282) 34
T_TSIZE (283) 35
T_TFLOAT (284) 36
T_TDOUBLE (285) 37
T_TBOOL (286) 38
T_TRUE (287) 94
T_FALSE (288) 95
T_ARGET (289)
T_ID (290)
T_UNION (291) 27
T_FARROW (292) 70 71
T_TARROW (293) 15 16


Нетерминальные символы с правилами, в которых они появляются

$accept (55)
    налево: 0
FunctionalProgram (56)
    налево: 1 2, направо: 0
DataTypeDefinitionsBlocks (57)
    налево: 3 4, направо: 1 4
DataTypeDefinitionsBlock (58)
    налево: 5 6 7 8, направо: 3 4 23
TypeName (59)
    налево: 9, направо: 5 6 7 8 15 16 22 29 30
TypeParametersList (60)
    налево: 10 11, направо: 6 8 11
TypeParameterDef (61)
    налево: 12, направо: 10 11
ConstructorsDefinitionList (62)
    налево: 13 14, направо: 7 8 14
ConstructorDef (63)
    налево: 15 16, направо: 13 14
ConstructorParametersList (64)
    налево: 17 18, направо: 16 18 24
TypesDefinitionList (65)
    налево: 19, направо: 5 6 7 8
TypesDefinitionList2 (66)
    налево: 20 21, направо: 19 21
TypeDefinition (67)
    налево: 22 23, направо: 20 21
TypeDefConstructor (68)
    налево: 24 25, направо: 26 27
TypeExpression (69)
    налево: 26 27, направо: 22 27
AtomType (70)
    налево: 28 29 30 31, направо: 17 18 39 40
BaseType (71)
    налево: 32 33 34 35 36 37 38, направо: 28
TypeExpressionsList (72)
    налево: 39 40, направо: 30 40
TypeParameter (73)
    налево: 41, направо: 12 31
ConstructorName (74)
    налево: 42, направо: 24 25 85 86
Scheme (75)
    налево: 43 44, направо: 1 2
SchemeBegin (76)
    налево: 45, направо: 43 44
FormalParametersList (77)
    налево: 46 47, направо: 44 47 79
FormalParameter (78)
    налево: 48, направо: 46 47
DefinitionsList (79)
    налево: 49 50, направо: 43 44 50 77 79
Definition (80)
    налево: 51 52 53, направо: 49 50
Term (81)
    налево: 54, направо: 51 52 55
AtomTerm (82)
    налево: 55 56 57 58, направо: 65 66
FuncObjectWithParameters (83)
    налево: 59, направо: 64 75
FuncArgumentList (84)
    налево: 60 61, направо: 59 61
FuncParameterName (85)
    налево: 62 63 64, направо: 60 61
SequentialTerm (86)
    налево: 65 66, направо: 66 67 68
CompositionTerm (87)
    налево: 67 68, направо: 68 69 70 71
ConditionTerm (88)
    налево: 69 70 71, направо: 70 72 73
VariantTerm (89)
    налево: 72 73, направо: 54 73
FuncObjectName (90)
    налево: 74 75, направо: 57
ConstructionFun (91)
    налево: 77 79, направо: 53
$@1 (92)
    налево: 76, направо: 77
$@2 (93)
    налево: 78, направо: 79
ConstructionFunName (94)
    налево: 80, направо: 77 79
FuncVarName (95)
    налево: 81, направо: 52
ElementaryFunctionName (96)
    налево: 82 83 84, направо: 56 63
Constructor (97)
    налево: 85, направо: 83 111 114
Destructor (98)
    налево: 86, направо: 84
BuiltInFunction (99)
    налево: 87 88 89, направо: 82
TupleElement (100)
    налево: 90, направо: 88
Constant (101)
    налево: 91 92 93 94 95, направо: 89 110
BuiltInFunctionName (102)
    налево: 96, направо: 87
Application (103)
    налево: 97 98 99 100, направо: 1 2
DataInit (104)
    налево: 101 102, направо: 99 100 102
OneDataInit (105)
    налево: 103, направо: 101 102
DataName (106)
    налево: 104, направо: 103 108
InterpFunProgramName (107)
    налево: 105, направо: 97 98 99 100
Data (108)
    налево: 106 107, направо: 98 100 107
OneData (109)
    налево: 108 109, направо: 106 107
ValueAtom (110)
    налево: 110 111 112, направо: 113 114
ValueConstructor (111)
    налево: 113 114, направо: 115 116
ValueComposition (112)
    налево: 115 116, направо: 116 117
Value (113)
    налево: 117, направо: 103 109 112


Состояние 0

    0 $accept: . FunctionalProgram $end

    T_SCHEME  сдвиг, и переход в состояние 1
    T_DATA    сдвиг, и переход в состояние 2

    FunctionalProgram          переход в состояние 3
    DataTypeDefinitionsBlocks  переход в состояние 4
    DataTypeDefinitionsBlock   переход в состояние 5
    Scheme                     переход в состояние 6
    SchemeBegin                переход в состояние 7


Состояние 1

   45 SchemeBegin: T_SCHEME . NAME

    NAME  сдвиг, и переход в состояние 8


Состояние 2

    5 DataTypeDefinitionsBlock: T_DATA . TypeName '{' TypesDefinitionList '}'
    6                         | T_DATA . TypeName '[' TypeParametersList ']' '{' TypesDefinitionList '}'
    7                         | T_DATA . TypeName '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'
    8                         | T_DATA . TypeName '[' TypeParametersList ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    NAME  сдвиг, и переход в состояние 9

    TypeName  переход в состояние 10


Состояние 3

    0 $accept: FunctionalProgram . $end

    $end  сдвиг, и переход в состояние 11


Состояние 4

    1 FunctionalProgram: DataTypeDefinitionsBlocks . Scheme Application

    T_SCHEME  сдвиг, и переход в состояние 1

    Scheme       переход в состояние 12
    SchemeBegin  переход в состояние 7


Состояние 5

    3 DataTypeDefinitionsBlocks: DataTypeDefinitionsBlock .
    4                          | DataTypeDefinitionsBlock . DataTypeDefinitionsBlocks

    T_DATA  сдвиг, и переход в состояние 2

    $default  вывод с использованием правила 3 (DataTypeDefinitionsBlocks)

    DataTypeDefinitionsBlocks  переход в состояние 13
    DataTypeDefinitionsBlock   переход в состояние 5


Состояние 6

    2 FunctionalProgram: Scheme . Application

    T_APPLICATION  сдвиг, и переход в состояние 14

    Application  переход в состояние 15


Состояние 7

   43 Scheme: SchemeBegin . '{' DefinitionsList '}'
   44       | SchemeBegin . '[' FormalParametersList ']' '{' DefinitionsList '}'

    '{'  сдвиг, и переход в состояние 16
    '['  сдвиг, и переход в состояние 17


Состояние 8

   45 SchemeBegin: T_SCHEME NAME .

    $default  вывод с использованием правила 45 (SchemeBegin)


Состояние 9

    9 TypeName: NAME .

    $default  вывод с использованием правила 9 (TypeName)


Состояние 10

    5 DataTypeDefinitionsBlock: T_DATA TypeName . '{' TypesDefinitionList '}'
    6                         | T_DATA TypeName . '[' TypeParametersList ']' '{' TypesDefinitionList '}'
    7                         | T_DATA TypeName . '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'
    8                         | T_DATA TypeName . '[' TypeParametersList ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    '{'  сдвиг, и переход в состояние 18
    '['  сдвиг, и переход в состояние 19


Состояние 11

    0 $accept: FunctionalProgram $end .

    $default  принять


Состояние 12

    1 FunctionalProgram: DataTypeDefinitionsBlocks Scheme . Application

    T_APPLICATION  сдвиг, и переход в состояние 14

    Application  переход в состояние 20


Состояние 13

    4 DataTypeDefinitionsBlocks: DataTypeDefinitionsBlock DataTypeDefinitionsBlocks .

    $default  вывод с использованием правила 4 (DataTypeDefinitionsBlocks)


Состояние 14

   97 Application: T_APPLICATION . InterpFunProgramName
   98            | T_APPLICATION . InterpFunProgramName '(' Data ')'
   99            | T_APPLICATION . DataInit InterpFunProgramName
  100            | T_APPLICATION . DataInit InterpFunProgramName '(' Data ')'

    NAME  сдвиг, и переход в состояние 21
    '%'   сдвиг, и переход в состояние 22

    DataInit              переход в состояние 23
    OneDataInit           переход в состояние 24
    DataName              переход в состояние 25
    InterpFunProgramName  переход в состояние 26


Состояние 15

    2 FunctionalProgram: Scheme Application .

    $default  вывод с использованием правила 2 (FunctionalProgram)


Состояние 16

   43 Scheme: SchemeBegin '{' . DefinitionsList '}'

    NAME   сдвиг, и переход в состояние 27
    T_FUN  сдвиг, и переход в состояние 28
    '@'    сдвиг, и переход в состояние 29

    DefinitionsList  переход в состояние 30
    Definition       переход в состояние 31
    ConstructionFun  переход в состояние 32
    FuncVarName      переход в состояние 33


Состояние 17

   44 Scheme: SchemeBegin '[' . FormalParametersList ']' '{' DefinitionsList '}'

    NAME  сдвиг, и переход в состояние 34

    FormalParametersList  переход в состояние 35
    FormalParameter       переход в состояние 36


Состояние 18

    5 DataTypeDefinitionsBlock: T_DATA TypeName '{' . TypesDefinitionList '}'
    7                         | T_DATA TypeName '{' . T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    NAME            сдвиг, и переход в состояние 9
    T_DATA          сдвиг, и переход в состояние 2
    T_CONSTRUCTORS  сдвиг, и переход в состояние 37

    DataTypeDefinitionsBlock  переход в состояние 38
    TypeName                  переход в состояние 39
    TypesDefinitionList       переход в состояние 40
    TypesDefinitionList2      переход в состояние 41
    TypeDefinition            переход в состояние 42


Состояние 19

    6 DataTypeDefinitionsBlock: T_DATA TypeName '[' . TypeParametersList ']' '{' TypesDefinitionList '}'
    8                         | T_DATA TypeName '[' . TypeParametersList ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    TYPEPARAMNAME  сдвиг, и переход в состояние 43

    TypeParametersList  переход в состояние 44
    TypeParameterDef    переход в состояние 45
    TypeParameter       переход в состояние 46


Состояние 20

    1 FunctionalProgram: DataTypeDefinitionsBlocks Scheme Application .

    $default  вывод с использованием правила 1 (FunctionalProgram)


Состояние 21

  104 DataName: NAME .

    $default  вывод с использованием правила 104 (DataName)


Состояние 22

  105 InterpFunProgramName: '%' . NAME

    NAME  сдвиг, и переход в состояние 47


Состояние 23

   99 Application: T_APPLICATION DataInit . InterpFunProgramName
  100            | T_APPLICATION DataInit . InterpFunProgramName '(' Data ')'

    '%'  сдвиг, и переход в состояние 22

    InterpFunProgramName  переход в состояние 48


Состояние 24

  101 DataInit: OneDataInit .
  102         | OneDataInit . DataInit

    NAME  сдвиг, и переход в состояние 21

    $default  вывод с использованием правила 101 (DataInit)

    DataInit     переход в состояние 49
    OneDataInit  переход в состояние 24
    DataName     переход в состояние 25


Состояние 25

  103 OneDataInit: DataName . '=' Value ';'

    '='  сдвиг, и переход в состояние 50


Состояние 26

   97 Application: T_APPLICATION InterpFunProgramName .
   98            | T_APPLICATION InterpFunProgramName . '(' Data ')'

    '('  сдвиг, и переход в состояние 51

    $default  вывод с использованием правила 97 (Application)


Состояние 27

   81 FuncVarName: NAME .

    $default  вывод с использованием правила 81 (FuncVarName)


Состояние 28

   77 ConstructionFun: T_FUN . ConstructionFunName $@1 '{' DefinitionsList '}'
   79                | T_FUN . ConstructionFunName $@2 '[' FormalParametersList ']' '{' DefinitionsList '}'

    NAME  сдвиг, и переход в состояние 52

    ConstructionFunName  переход в состояние 53


Состояние 29

   51 Definition: '@' . '=' Term ';'

    '='  сдвиг, и переход в состояние 54


Состояние 30

   43 Scheme: SchemeBegin '{' DefinitionsList . '}'

    '}'  сдвиг, и переход в состояние 55


Состояние 31

   49 DefinitionsList: Definition .
   50                | Definition . DefinitionsList

    NAME   сдвиг, и переход в состояние 27
    T_FUN  сдвиг, и переход в состояние 28
    '@'    сдвиг, и переход в состояние 29

    $default  вывод с использованием правила 49 (DefinitionsList)

    DefinitionsList  переход в состояние 56
    Definition       переход в состояние 31
    ConstructionFun  переход в состояние 32
    FuncVarName      переход в состояние 33


Состояние 32

   53 Definition: ConstructionFun .

    $default  вывод с использованием правила 53 (Definition)


Состояние 33

   52 Definition: FuncVarName . '=' Term ';'

    '='  сдвиг, и переход в состояние 57


Состояние 34

   48 FormalParameter: NAME .

    $default  вывод с использованием правила 48 (FormalParameter)


Состояние 35

   44 Scheme: SchemeBegin '[' FormalParametersList . ']' '{' DefinitionsList '}'

    ']'  сдвиг, и переход в состояние 58


Состояние 36

   46 FormalParametersList: FormalParameter .
   47                     | FormalParameter . ',' FormalParametersList

    ','  сдвиг, и переход в состояние 59

    $default  вывод с использованием правила 46 (FormalParametersList)


Состояние 37

    7 DataTypeDefinitionsBlock: T_DATA TypeName '{' T_CONSTRUCTORS . '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    '{'  сдвиг, и переход в состояние 60


Состояние 38

   23 TypeDefinition: DataTypeDefinitionsBlock .

    $default  вывод с использованием правила 23 (TypeDefinition)


Состояние 39

   22 TypeDefinition: TypeName . '=' TypeExpression ';'

    '='  сдвиг, и переход в состояние 61


Состояние 40

    5 DataTypeDefinitionsBlock: T_DATA TypeName '{' TypesDefinitionList . '}'

    '}'  сдвиг, и переход в состояние 62


Состояние 41

   19 TypesDefinitionList: TypesDefinitionList2 .

    $default  вывод с использованием правила 19 (TypesDefinitionList)


Состояние 42

   20 TypesDefinitionList2: TypeDefinition .
   21                     | TypeDefinition . TypesDefinitionList2

    NAME    сдвиг, и переход в состояние 9
    T_DATA  сдвиг, и переход в состояние 2

    $default  вывод с использованием правила 20 (TypesDefinitionList2)

    DataTypeDefinitionsBlock  переход в состояние 38
    TypeName                  переход в состояние 39
    TypesDefinitionList2      переход в состояние 63
    TypeDefinition            переход в состояние 42


Состояние 43

   41 TypeParameter: TYPEPARAMNAME .

    $default  вывод с использованием правила 41 (TypeParameter)


Состояние 44

    6 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList . ']' '{' TypesDefinitionList '}'
    8                         | T_DATA TypeName '[' TypeParametersList . ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    ']'  сдвиг, и переход в состояние 64


Состояние 45

   10 TypeParametersList: TypeParameterDef .
   11                   | TypeParameterDef . ',' TypeParametersList

    ','  сдвиг, и переход в состояние 65

    $default  вывод с использованием правила 10 (TypeParametersList)


Состояние 46

   12 TypeParameterDef: TypeParameter .

    $default  вывод с использованием правила 12 (TypeParameterDef)


Состояние 47

  105 InterpFunProgramName: '%' NAME .

    $default  вывод с использованием правила 105 (InterpFunProgramName)


Состояние 48

   99 Application: T_APPLICATION DataInit InterpFunProgramName .
  100            | T_APPLICATION DataInit InterpFunProgramName . '(' Data ')'

    '('  сдвиг, и переход в состояние 66

    $default  вывод с использованием правила 99 (Application)


Состояние 49

  102 DataInit: OneDataInit DataInit .

    $default  вывод с использованием правила 102 (DataInit)


Состояние 50

  103 OneDataInit: DataName '=' . Value ';'

    CONSNAME    сдвиг, и переход в состояние 67
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '('         сдвиг, и переход в состояние 73

    ConstructorName   переход в состояние 74
    Constructor       переход в состояние 75
    Constant          переход в состояние 76
    ValueAtom         переход в состояние 77
    ValueConstructor  переход в состояние 78
    ValueComposition  переход в состояние 79
    Value             переход в состояние 80


Состояние 51

   98 Application: T_APPLICATION InterpFunProgramName '(' . Data ')'

    NAME        сдвиг, и переход в состояние 21
    CONSNAME    сдвиг, и переход в состояние 67
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '('         сдвиг, и переход в состояние 73

    ConstructorName   переход в состояние 74
    Constructor       переход в состояние 75
    Constant          переход в состояние 76
    DataName          переход в состояние 81
    Data              переход в состояние 82
    OneData           переход в состояние 83
    ValueAtom         переход в состояние 77
    ValueConstructor  переход в состояние 78
    ValueComposition  переход в состояние 79
    Value             переход в состояние 84


Состояние 52

   80 ConstructionFunName: NAME .

    $default  вывод с использованием правила 80 (ConstructionFunName)


Состояние 53

   77 ConstructionFun: T_FUN ConstructionFunName . $@1 '{' DefinitionsList '}'
   79                | T_FUN ConstructionFunName . $@2 '[' FormalParametersList ']' '{' DefinitionsList '}'

    '['       вывод с использованием правила 78 ($@2)
    $default  вывод с использованием правила 76 ($@1)

    $@1  переход в состояние 85
    $@2  переход в состояние 86


Состояние 54

   51 Definition: '@' '=' . Term ';'

    NAME        сдвиг, и переход в состояние 87
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '@'         сдвиг, и переход в состояние 90
    '('         сдвиг, и переход в состояние 91
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    Term                      переход в состояние 93
    AtomTerm                  переход в состояние 94
    FuncObjectWithParameters  переход в состояние 95
    SequentialTerm            переход в состояние 96
    CompositionTerm           переход в состояние 97
    ConditionTerm             переход в состояние 98
    VariantTerm               переход в состояние 99
    FuncObjectName            переход в состояние 100
    ElementaryFunctionName    переход в состояние 101
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 55

   43 Scheme: SchemeBegin '{' DefinitionsList '}' .

    $default  вывод с использованием правила 43 (Scheme)


Состояние 56

   50 DefinitionsList: Definition DefinitionsList .

    $default  вывод с использованием правила 50 (DefinitionsList)


Состояние 57

   52 Definition: FuncVarName '=' . Term ';'

    NAME        сдвиг, и переход в состояние 87
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '@'         сдвиг, и переход в состояние 90
    '('         сдвиг, и переход в состояние 91
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    Term                      переход в состояние 108
    AtomTerm                  переход в состояние 94
    FuncObjectWithParameters  переход в состояние 95
    SequentialTerm            переход в состояние 96
    CompositionTerm           переход в состояние 97
    ConditionTerm             переход в состояние 98
    VariantTerm               переход в состояние 99
    FuncObjectName            переход в состояние 100
    ElementaryFunctionName    переход в состояние 101
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 58

   44 Scheme: SchemeBegin '[' FormalParametersList ']' . '{' DefinitionsList '}'

    '{'  сдвиг, и переход в состояние 109


Состояние 59

   47 FormalParametersList: FormalParameter ',' . FormalParametersList

    NAME  сдвиг, и переход в состояние 34

    FormalParametersList  переход в состояние 110
    FormalParameter       переход в состояние 36


Состояние 60

    7 DataTypeDefinitionsBlock: T_DATA TypeName '{' T_CONSTRUCTORS '{' . ConstructorsDefinitionList '}' TypesDefinitionList '}'

    NAME           сдвиг, и переход в состояние 9
    TYPEPARAMNAME  сдвиг, и переход в состояние 43
    T_TSTRING      сдвиг, и переход в состояние 111
    T_TINT         сдвиг, и переход в состояние 112
    T_TUINT        сдвиг, и переход в состояние 113
    T_TSIZE        сдвиг, и переход в состояние 114
    T_TFLOAT       сдвиг, и переход в состояние 115
    T_TDOUBLE      сдвиг, и переход в состояние 116
    T_TBOOL        сдвиг, и переход в состояние 117
    T_TARROW       сдвиг, и переход в состояние 118

    TypeName                    переход в состояние 119
    ConstructorsDefinitionList  переход в состояние 120
    ConstructorDef              переход в состояние 121
    ConstructorParametersList   переход в состояние 122
    AtomType                    переход в состояние 123
    BaseType                    переход в состояние 124
    TypeParameter               переход в состояние 125


Состояние 61

   22 TypeDefinition: TypeName '=' . TypeExpression ';'

    NAME           сдвиг, и переход в состояние 9
    CONSNAME       сдвиг, и переход в состояние 67
    TYPEPARAMNAME  сдвиг, и переход в состояние 43
    T_TSTRING      сдвиг, и переход в состояние 111
    T_TINT         сдвиг, и переход в состояние 112
    T_TUINT        сдвиг, и переход в состояние 113
    T_TSIZE        сдвиг, и переход в состояние 114
    T_TFLOAT       сдвиг, и переход в состояние 115
    T_TDOUBLE      сдвиг, и переход в состояние 116
    T_TBOOL        сдвиг, и переход в состояние 117

    TypeName                   переход в состояние 119
    ConstructorParametersList  переход в состояние 126
    TypeDefConstructor         переход в состояние 127
    TypeExpression             переход в состояние 128
    AtomType                   переход в состояние 123
    BaseType                   переход в состояние 124
    TypeParameter              переход в состояние 125
    ConstructorName            переход в состояние 129


Состояние 62

    5 DataTypeDefinitionsBlock: T_DATA TypeName '{' TypesDefinitionList '}' .

    $default  вывод с использованием правила 5 (DataTypeDefinitionsBlock)


Состояние 63

   21 TypesDefinitionList2: TypeDefinition TypesDefinitionList2 .

    $default  вывод с использованием правила 21 (TypesDefinitionList2)


Состояние 64

    6 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' . '{' TypesDefinitionList '}'
    8                         | T_DATA TypeName '[' TypeParametersList ']' . '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    '{'  сдвиг, и переход в состояние 130


Состояние 65

   11 TypeParametersList: TypeParameterDef ',' . TypeParametersList

    TYPEPARAMNAME  сдвиг, и переход в состояние 43

    TypeParametersList  переход в состояние 131
    TypeParameterDef    переход в состояние 45
    TypeParameter       переход в состояние 46


Состояние 66

  100 Application: T_APPLICATION DataInit InterpFunProgramName '(' . Data ')'

    NAME        сдвиг, и переход в состояние 21
    CONSNAME    сдвиг, и переход в состояние 67
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '('         сдвиг, и переход в состояние 73

    ConstructorName   переход в состояние 74
    Constructor       переход в состояние 75
    Constant          переход в состояние 76
    DataName          переход в состояние 81
    Data              переход в состояние 132
    OneData           переход в состояние 83
    ValueAtom         переход в состояние 77
    ValueConstructor  переход в состояние 78
    ValueComposition  переход в состояние 79
    Value             переход в состояние 84


Состояние 67

   42 ConstructorName: CONSNAME .

    $default  вывод с использованием правила 42 (ConstructorName)


Состояние 68

   91 Constant: NUMBER .

    $default  вывод с использованием правила 91 (Constant)


Состояние 69

   92 Constant: REALNUMBER .

    $default  вывод с использованием правила 92 (Constant)


Состояние 70

   93 Constant: STRING .

    $default  вывод с использованием правила 93 (Constant)


Состояние 71

   94 Constant: T_TRUE .

    $default  вывод с использованием правила 94 (Constant)


Состояние 72

   95 Constant: T_FALSE .

    $default  вывод с использованием правила 95 (Constant)


Состояние 73

  112 ValueAtom: '(' . Value ')'

    CONSNAME    сдвиг, и переход в состояние 67
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '('         сдвиг, и переход в состояние 73

    ConstructorName   переход в состояние 74
    Constructor       переход в состояние 75
    Constant          переход в состояние 76
    ValueAtom         переход в состояние 77
    ValueConstructor  переход в состояние 78
    ValueComposition  переход в состояние 79
    Value             переход в состояние 133


Состояние 74

   85 Constructor: ConstructorName .

    $default  вывод с использованием правила 85 (Constructor)


Состояние 75

  111 ValueAtom: Constructor .

    $default  вывод с использованием правила 111 (ValueAtom)


Состояние 76

  110 ValueAtom: Constant .

    $default  вывод с использованием правила 110 (ValueAtom)


Состояние 77

  113 ValueConstructor: ValueAtom .
  114                 | ValueAtom . '.' Constructor

    '.'  сдвиг, и переход в состояние 134

    $default  вывод с использованием правила 113 (ValueConstructor)


Состояние 78

  115 ValueComposition: ValueConstructor .
  116                 | ValueConstructor . '*' ValueComposition

    '*'  сдвиг, и переход в состояние 135

    $default  вывод с использованием правила 115 (ValueComposition)


Состояние 79

  117 Value: ValueComposition .

    $default  вывод с использованием правила 117 (Value)


Состояние 80

  103 OneDataInit: DataName '=' Value . ';'

    ';'  сдвиг, и переход в состояние 136


Состояние 81

  108 OneData: DataName .

    $default  вывод с использованием правила 108 (OneData)


Состояние 82

   98 Application: T_APPLICATION InterpFunProgramName '(' Data . ')'

    ')'  сдвиг, и переход в состояние 137


Состояние 83

  106 Data: OneData .
  107     | OneData . ',' Data

    ','  сдвиг, и переход в состояние 138

    $default  вывод с использованием правила 106 (Data)


Состояние 84

  109 OneData: Value .

    $default  вывод с использованием правила 109 (OneData)


Состояние 85

   77 ConstructionFun: T_FUN ConstructionFunName $@1 . '{' DefinitionsList '}'

    '{'  сдвиг, и переход в состояние 139


Состояние 86

   79 ConstructionFun: T_FUN ConstructionFunName $@2 . '[' FormalParametersList ']' '{' DefinitionsList '}'

    '['  сдвиг, и переход в состояние 140


Состояние 87

   59 FuncObjectWithParameters: NAME . '(' FuncArgumentList ')'
   74 FuncObjectName: NAME .

    '('  сдвиг, и переход в состояние 141

    $default  вывод с использованием правила 74 (FuncObjectName)


Состояние 88

   96 BuiltInFunctionName: BFNAME .

    $default  вывод с использованием правила 96 (BuiltInFunctionName)


Состояние 89

   90 TupleElement: '[' . NUMBER ']'

    NUMBER  сдвиг, и переход в состояние 142


Состояние 90

   58 AtomTerm: '@' .

    $default  вывод с использованием правила 58 (AtomTerm)


Состояние 91

   55 AtomTerm: '(' . Term ')'

    NAME        сдвиг, и переход в состояние 87
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '@'         сдвиг, и переход в состояние 90
    '('         сдвиг, и переход в состояние 91
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    Term                      переход в состояние 143
    AtomTerm                  переход в состояние 94
    FuncObjectWithParameters  переход в состояние 95
    SequentialTerm            переход в состояние 96
    CompositionTerm           переход в состояние 97
    ConditionTerm             переход в состояние 98
    VariantTerm               переход в состояние 99
    FuncObjectName            переход в состояние 100
    ElementaryFunctionName    переход в состояние 101
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 92

   86 Destructor: '~' . ConstructorName

    CONSNAME  сдвиг, и переход в состояние 67

    ConstructorName  переход в состояние 144


Состояние 93

   51 Definition: '@' '=' Term . ';'

    ';'  сдвиг, и переход в состояние 145


Состояние 94

   65 SequentialTerm: AtomTerm .

    $default  вывод с использованием правила 65 (SequentialTerm)


Состояние 95

   75 FuncObjectName: FuncObjectWithParameters .

    $default  вывод с использованием правила 75 (FuncObjectName)


Состояние 96

   66 SequentialTerm: SequentialTerm . '.' AtomTerm
   67 CompositionTerm: SequentialTerm .

    '.'  сдвиг, и переход в состояние 146

    $default  вывод с использованием правила 67 (CompositionTerm)


Состояние 97

   68 CompositionTerm: CompositionTerm . '*' SequentialTerm
   69 ConditionTerm: CompositionTerm .
   70              | CompositionTerm . T_FARROW CompositionTerm ',' ConditionTerm
   71              | CompositionTerm . T_FARROW CompositionTerm

    T_FARROW  сдвиг, и переход в состояние 147
    '*'       сдвиг, и переход в состояние 148

    $default  вывод с использованием правила 69 (ConditionTerm)


Состояние 98

   72 VariantTerm: ConditionTerm .

    $default  вывод с использованием правила 72 (VariantTerm)


Состояние 99

   54 Term: VariantTerm .
   73 VariantTerm: VariantTerm . '+' ConditionTerm

    '+'  сдвиг, и переход в состояние 149

    $default  вывод с использованием правила 54 (Term)


Состояние 100

   57 AtomTerm: FuncObjectName .

    $default  вывод с использованием правила 57 (AtomTerm)


Состояние 101

   56 AtomTerm: ElementaryFunctionName .

    $default  вывод с использованием правила 56 (AtomTerm)


Состояние 102

   83 ElementaryFunctionName: Constructor .

    $default  вывод с использованием правила 83 (ElementaryFunctionName)


Состояние 103

   84 ElementaryFunctionName: Destructor .

    $default  вывод с использованием правила 84 (ElementaryFunctionName)


Состояние 104

   82 ElementaryFunctionName: BuiltInFunction .

    $default  вывод с использованием правила 82 (ElementaryFunctionName)


Состояние 105

   88 BuiltInFunction: TupleElement .

    $default  вывод с использованием правила 88 (BuiltInFunction)


Состояние 106

   89 BuiltInFunction: Constant .

    $default  вывод с использованием правила 89 (BuiltInFunction)


Состояние 107

   87 BuiltInFunction: BuiltInFunctionName .

    $default  вывод с использованием правила 87 (BuiltInFunction)


Состояние 108

   52 Definition: FuncVarName '=' Term . ';'

    ';'  сдвиг, и переход в состояние 150


Состояние 109

   44 Scheme: SchemeBegin '[' FormalParametersList ']' '{' . DefinitionsList '}'

    NAME   сдвиг, и переход в состояние 27
    T_FUN  сдвиг, и переход в состояние 28
    '@'    сдвиг, и переход в состояние 29

    DefinitionsList  переход в состояние 151
    Definition       переход в состояние 31
    ConstructionFun  переход в состояние 32
    FuncVarName      переход в состояние 33


Состояние 110

   47 FormalParametersList: FormalParameter ',' FormalParametersList .

    $default  вывод с использованием правила 47 (FormalParametersList)


Состояние 111

   32 BaseType: T_TSTRING .

    $default  вывод с использованием правила 32 (BaseType)


Состояние 112

   33 BaseType: T_TINT .

    $default  вывод с использованием правила 33 (BaseType)


Состояние 113

   34 BaseType: T_TUINT .

    $default  вывод с использованием правила 34 (BaseType)


Состояние 114

   35 BaseType: T_TSIZE .

    $default  вывод с использованием правила 35 (BaseType)


Состояние 115

   36 BaseType: T_TFLOAT .

    $default  вывод с использованием правила 36 (BaseType)


Состояние 116

   37 BaseType: T_TDOUBLE .

    $default  вывод с использованием правила 37 (BaseType)


Состояние 117

   38 BaseType: T_TBOOL .

    $default  вывод с использованием правила 38 (BaseType)


Состояние 118

   15 ConstructorDef: T_TARROW . TypeName ':' CONSNAME ';'

    NAME  сдвиг, и переход в состояние 9

    TypeName  переход в состояние 152


Состояние 119

   29 AtomType: TypeName .
   30         | TypeName . '[' TypeExpressionsList ']'

    '['  сдвиг, и переход в состояние 153

    $default  вывод с использованием правила 29 (AtomType)


Состояние 120

    7 DataTypeDefinitionsBlock: T_DATA TypeName '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList . '}' TypesDefinitionList '}'

    '}'  сдвиг, и переход в состояние 154


Состояние 121

   13 ConstructorsDefinitionList: ConstructorDef .
   14                           | ConstructorDef . ConstructorsDefinitionList

    NAME           сдвиг, и переход в состояние 9
    TYPEPARAMNAME  сдвиг, и переход в состояние 43
    T_TSTRING      сдвиг, и переход в состояние 111
    T_TINT         сдвиг, и переход в состояние 112
    T_TUINT        сдвиг, и переход в состояние 113
    T_TSIZE        сдвиг, и переход в состояние 114
    T_TFLOAT       сдвиг, и переход в состояние 115
    T_TDOUBLE      сдвиг, и переход в состояние 116
    T_TBOOL        сдвиг, и переход в состояние 117
    T_TARROW       сдвиг, и переход в состояние 118

    $default  вывод с использованием правила 13 (ConstructorsDefinitionList)

    TypeName                    переход в состояние 119
    ConstructorsDefinitionList  переход в состояние 155
    ConstructorDef              переход в состояние 121
    ConstructorParametersList   переход в состояние 122
    AtomType                    переход в состояние 123
    BaseType                    переход в состояние 124
    TypeParameter               переход в состояние 125


Состояние 122

   16 ConstructorDef: ConstructorParametersList . T_TARROW TypeName ':' CONSNAME ';'

    T_TARROW  сдвиг, и переход в состояние 156


Состояние 123

   17 ConstructorParametersList: AtomType .
   18                          | AtomType . '*' ConstructorParametersList

    '*'  сдвиг, и переход в состояние 157

    $default  вывод с использованием правила 17 (ConstructorParametersList)


Состояние 124

   28 AtomType: BaseType .

    $default  вывод с использованием правила 28 (AtomType)


Состояние 125

   31 AtomType: TypeParameter .

    $default  вывод с использованием правила 31 (AtomType)


Состояние 126

   24 TypeDefConstructor: ConstructorParametersList . '.' ConstructorName

    '.'  сдвиг, и переход в состояние 158


Состояние 127

   26 TypeExpression: TypeDefConstructor .
   27               | TypeDefConstructor . T_UNION TypeExpression

    T_UNION  сдвиг, и переход в состояние 159

    $default  вывод с использованием правила 26 (TypeExpression)


Состояние 128

   22 TypeDefinition: TypeName '=' TypeExpression . ';'

    ';'  сдвиг, и переход в состояние 160


Состояние 129

   25 TypeDefConstructor: ConstructorName .

    $default  вывод с использованием правила 25 (TypeDefConstructor)


Состояние 130

    6 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' . TypesDefinitionList '}'
    8                         | T_DATA TypeName '[' TypeParametersList ']' '{' . T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    NAME            сдвиг, и переход в состояние 9
    T_DATA          сдвиг, и переход в состояние 2
    T_CONSTRUCTORS  сдвиг, и переход в состояние 161

    DataTypeDefinitionsBlock  переход в состояние 38
    TypeName                  переход в состояние 39
    TypesDefinitionList       переход в состояние 162
    TypesDefinitionList2      переход в состояние 41
    TypeDefinition            переход в состояние 42


Состояние 131

   11 TypeParametersList: TypeParameterDef ',' TypeParametersList .

    $default  вывод с использованием правила 11 (TypeParametersList)


Состояние 132

  100 Application: T_APPLICATION DataInit InterpFunProgramName '(' Data . ')'

    ')'  сдвиг, и переход в состояние 163


Состояние 133

  112 ValueAtom: '(' Value . ')'

    ')'  сдвиг, и переход в состояние 164


Состояние 134

  114 ValueConstructor: ValueAtom '.' . Constructor

    CONSNAME  сдвиг, и переход в состояние 67

    ConstructorName  переход в состояние 74
    Constructor      переход в состояние 165


Состояние 135

  116 ValueComposition: ValueConstructor '*' . ValueComposition

    CONSNAME    сдвиг, и переход в состояние 67
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '('         сдвиг, и переход в состояние 73

    ConstructorName   переход в состояние 74
    Constructor       переход в состояние 75
    Constant          переход в состояние 76
    ValueAtom         переход в состояние 77
    ValueConstructor  переход в состояние 78
    ValueComposition  переход в состояние 166


Состояние 136

  103 OneDataInit: DataName '=' Value ';' .

    $default  вывод с использованием правила 103 (OneDataInit)


Состояние 137

   98 Application: T_APPLICATION InterpFunProgramName '(' Data ')' .

    $default  вывод с использованием правила 98 (Application)


Состояние 138

  107 Data: OneData ',' . Data

    NAME        сдвиг, и переход в состояние 21
    CONSNAME    сдвиг, и переход в состояние 67
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '('         сдвиг, и переход в состояние 73

    ConstructorName   переход в состояние 74
    Constructor       переход в состояние 75
    Constant          переход в состояние 76
    DataName          переход в состояние 81
    Data              переход в состояние 167
    OneData           переход в состояние 83
    ValueAtom         переход в состояние 77
    ValueConstructor  переход в состояние 78
    ValueComposition  переход в состояние 79
    Value             переход в состояние 84


Состояние 139

   77 ConstructionFun: T_FUN ConstructionFunName $@1 '{' . DefinitionsList '}'

    NAME   сдвиг, и переход в состояние 27
    T_FUN  сдвиг, и переход в состояние 28
    '@'    сдвиг, и переход в состояние 29

    DefinitionsList  переход в состояние 168
    Definition       переход в состояние 31
    ConstructionFun  переход в состояние 32
    FuncVarName      переход в состояние 33


Состояние 140

   79 ConstructionFun: T_FUN ConstructionFunName $@2 '[' . FormalParametersList ']' '{' DefinitionsList '}'

    NAME  сдвиг, и переход в состояние 34

    FormalParametersList  переход в состояние 169
    FormalParameter       переход в состояние 36


Состояние 141

   59 FuncObjectWithParameters: NAME '(' . FuncArgumentList ')'

    NAME        сдвиг, и переход в состояние 170
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    FuncObjectWithParameters  переход в состояние 171
    FuncArgumentList          переход в состояние 172
    FuncParameterName         переход в состояние 173
    ElementaryFunctionName    переход в состояние 174
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 142

   90 TupleElement: '[' NUMBER . ']'

    ']'  сдвиг, и переход в состояние 175


Состояние 143

   55 AtomTerm: '(' Term . ')'

    ')'  сдвиг, и переход в состояние 176


Состояние 144

   86 Destructor: '~' ConstructorName .

    $default  вывод с использованием правила 86 (Destructor)


Состояние 145

   51 Definition: '@' '=' Term ';' .

    $default  вывод с использованием правила 51 (Definition)


Состояние 146

   66 SequentialTerm: SequentialTerm '.' . AtomTerm

    NAME        сдвиг, и переход в состояние 87
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '@'         сдвиг, и переход в состояние 90
    '('         сдвиг, и переход в состояние 91
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    AtomTerm                  переход в состояние 177
    FuncObjectWithParameters  переход в состояние 95
    FuncObjectName            переход в состояние 100
    ElementaryFunctionName    переход в состояние 101
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 147

   70 ConditionTerm: CompositionTerm T_FARROW . CompositionTerm ',' ConditionTerm
   71              | CompositionTerm T_FARROW . CompositionTerm

    NAME        сдвиг, и переход в состояние 87
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '@'         сдвиг, и переход в состояние 90
    '('         сдвиг, и переход в состояние 91
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    AtomTerm                  переход в состояние 94
    FuncObjectWithParameters  переход в состояние 95
    SequentialTerm            переход в состояние 96
    CompositionTerm           переход в состояние 178
    FuncObjectName            переход в состояние 100
    ElementaryFunctionName    переход в состояние 101
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 148

   68 CompositionTerm: CompositionTerm '*' . SequentialTerm

    NAME        сдвиг, и переход в состояние 87
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '@'         сдвиг, и переход в состояние 90
    '('         сдвиг, и переход в состояние 91
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    AtomTerm                  переход в состояние 94
    FuncObjectWithParameters  переход в состояние 95
    SequentialTerm            переход в состояние 179
    FuncObjectName            переход в состояние 100
    ElementaryFunctionName    переход в состояние 101
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 149

   73 VariantTerm: VariantTerm '+' . ConditionTerm

    NAME        сдвиг, и переход в состояние 87
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '@'         сдвиг, и переход в состояние 90
    '('         сдвиг, и переход в состояние 91
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    AtomTerm                  переход в состояние 94
    FuncObjectWithParameters  переход в состояние 95
    SequentialTerm            переход в состояние 96
    CompositionTerm           переход в состояние 97
    ConditionTerm             переход в состояние 180
    FuncObjectName            переход в состояние 100
    ElementaryFunctionName    переход в состояние 101
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 150

   52 Definition: FuncVarName '=' Term ';' .

    $default  вывод с использованием правила 52 (Definition)


Состояние 151

   44 Scheme: SchemeBegin '[' FormalParametersList ']' '{' DefinitionsList . '}'

    '}'  сдвиг, и переход в состояние 181


Состояние 152

   15 ConstructorDef: T_TARROW TypeName . ':' CONSNAME ';'

    ':'  сдвиг, и переход в состояние 182


Состояние 153

   30 AtomType: TypeName '[' . TypeExpressionsList ']'

    NAME           сдвиг, и переход в состояние 9
    TYPEPARAMNAME  сдвиг, и переход в состояние 43
    T_TSTRING      сдвиг, и переход в состояние 111
    T_TINT         сдвиг, и переход в состояние 112
    T_TUINT        сдвиг, и переход в состояние 113
    T_TSIZE        сдвиг, и переход в состояние 114
    T_TFLOAT       сдвиг, и переход в состояние 115
    T_TDOUBLE      сдвиг, и переход в состояние 116
    T_TBOOL        сдвиг, и переход в состояние 117

    TypeName             переход в состояние 119
    AtomType             переход в состояние 183
    BaseType             переход в состояние 124
    TypeExpressionsList  переход в состояние 184
    TypeParameter        переход в состояние 125


Состояние 154

    7 DataTypeDefinitionsBlock: T_DATA TypeName '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' . TypesDefinitionList '}'

    NAME    сдвиг, и переход в состояние 9
    T_DATA  сдвиг, и переход в состояние 2

    DataTypeDefinitionsBlock  переход в состояние 38
    TypeName                  переход в состояние 39
    TypesDefinitionList       переход в состояние 185
    TypesDefinitionList2      переход в состояние 41
    TypeDefinition            переход в состояние 42


Состояние 155

   14 ConstructorsDefinitionList: ConstructorDef ConstructorsDefinitionList .

    $default  вывод с использованием правила 14 (ConstructorsDefinitionList)


Состояние 156

   16 ConstructorDef: ConstructorParametersList T_TARROW . TypeName ':' CONSNAME ';'

    NAME  сдвиг, и переход в состояние 9

    TypeName  переход в состояние 186


Состояние 157

   18 ConstructorParametersList: AtomType '*' . ConstructorParametersList

    NAME           сдвиг, и переход в состояние 9
    TYPEPARAMNAME  сдвиг, и переход в состояние 43
    T_TSTRING      сдвиг, и переход в состояние 111
    T_TINT         сдвиг, и переход в состояние 112
    T_TUINT        сдвиг, и переход в состояние 113
    T_TSIZE        сдвиг, и переход в состояние 114
    T_TFLOAT       сдвиг, и переход в состояние 115
    T_TDOUBLE      сдвиг, и переход в состояние 116
    T_TBOOL        сдвиг, и переход в состояние 117

    TypeName                   переход в состояние 119
    ConstructorParametersList  переход в состояние 187
    AtomType                   переход в состояние 123
    BaseType                   переход в состояние 124
    TypeParameter              переход в состояние 125


Состояние 158

   24 TypeDefConstructor: ConstructorParametersList '.' . ConstructorName

    CONSNAME  сдвиг, и переход в состояние 67

    ConstructorName  переход в состояние 188


Состояние 159

   27 TypeExpression: TypeDefConstructor T_UNION . TypeExpression

    NAME           сдвиг, и переход в состояние 9
    CONSNAME       сдвиг, и переход в состояние 67
    TYPEPARAMNAME  сдвиг, и переход в состояние 43
    T_TSTRING      сдвиг, и переход в состояние 111
    T_TINT         сдвиг, и переход в состояние 112
    T_TUINT        сдвиг, и переход в состояние 113
    T_TSIZE        сдвиг, и переход в состояние 114
    T_TFLOAT       сдвиг, и переход в состояние 115
    T_TDOUBLE      сдвиг, и переход в состояние 116
    T_TBOOL        сдвиг, и переход в состояние 117

    TypeName                   переход в состояние 119
    ConstructorParametersList  переход в состояние 126
    TypeDefConstructor         переход в состояние 127
    TypeExpression             переход в состояние 189
    AtomType                   переход в состояние 123
    BaseType                   переход в состояние 124
    TypeParameter              переход в состояние 125
    ConstructorName            переход в состояние 129


Состояние 160

   22 TypeDefinition: TypeName '=' TypeExpression ';' .

    $default  вывод с использованием правила 22 (TypeDefinition)


Состояние 161

    8 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' T_CONSTRUCTORS . '{' ConstructorsDefinitionList '}' TypesDefinitionList '}'

    '{'  сдвиг, и переход в состояние 190


Состояние 162

    6 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' TypesDefinitionList . '}'

    '}'  сдвиг, и переход в состояние 191


Состояние 163

  100 Application: T_APPLICATION DataInit InterpFunProgramName '(' Data ')' .

    $default  вывод с использованием правила 100 (Application)


Состояние 164

  112 ValueAtom: '(' Value ')' .

    $default  вывод с использованием правила 112 (ValueAtom)


Состояние 165

  114 ValueConstructor: ValueAtom '.' Constructor .

    $default  вывод с использованием правила 114 (ValueConstructor)


Состояние 166

  116 ValueComposition: ValueConstructor '*' ValueComposition .

    $default  вывод с использованием правила 116 (ValueComposition)


Состояние 167

  107 Data: OneData ',' Data .

    $default  вывод с использованием правила 107 (Data)


Состояние 168

   77 ConstructionFun: T_FUN ConstructionFunName $@1 '{' DefinitionsList . '}'

    '}'  сдвиг, и переход в состояние 192


Состояние 169

   79 ConstructionFun: T_FUN ConstructionFunName $@2 '[' FormalParametersList . ']' '{' DefinitionsList '}'

    ']'  сдвиг, и переход в состояние 193


Состояние 170

   59 FuncObjectWithParameters: NAME . '(' FuncArgumentList ')'
   62 FuncParameterName: NAME .

    '('  сдвиг, и переход в состояние 141

    $default  вывод с использованием правила 62 (FuncParameterName)


Состояние 171

   64 FuncParameterName: FuncObjectWithParameters .

    $default  вывод с использованием правила 64 (FuncParameterName)


Состояние 172

   59 FuncObjectWithParameters: NAME '(' FuncArgumentList . ')'

    ')'  сдвиг, и переход в состояние 194


Состояние 173

   60 FuncArgumentList: FuncParameterName .
   61                 | FuncParameterName . ',' FuncArgumentList

    ','  сдвиг, и переход в состояние 195

    $default  вывод с использованием правила 60 (FuncArgumentList)


Состояние 174

   63 FuncParameterName: ElementaryFunctionName .

    $default  вывод с использованием правила 63 (FuncParameterName)


Состояние 175

   90 TupleElement: '[' NUMBER ']' .

    $default  вывод с использованием правила 90 (TupleElement)


Состояние 176

   55 AtomTerm: '(' Term ')' .

    $default  вывод с использованием правила 55 (AtomTerm)


Состояние 177

   66 SequentialTerm: SequentialTerm '.' AtomTerm .

    $default  вывод с использованием правила 66 (SequentialTerm)


Состояние 178

   68 CompositionTerm: CompositionTerm . '*' SequentialTerm
   70 ConditionTerm: CompositionTerm T_FARROW CompositionTerm . ',' ConditionTerm
   71              | CompositionTerm T_FARROW CompositionTerm .

    ','  сдвиг, и переход в состояние 196
    '*'  сдвиг, и переход в состояние 148

    $default  вывод с использованием правила 71 (ConditionTerm)


Состояние 179

   66 SequentialTerm: SequentialTerm . '.' AtomTerm
   68 CompositionTerm: CompositionTerm '*' SequentialTerm .

    '.'  сдвиг, и переход в состояние 146

    $default  вывод с использованием правила 68 (CompositionTerm)


Состояние 180

   73 VariantTerm: VariantTerm '+' ConditionTerm .

    $default  вывод с использованием правила 73 (VariantTerm)


Состояние 181

   44 Scheme: SchemeBegin '[' FormalParametersList ']' '{' DefinitionsList '}' .

    $default  вывод с использованием правила 44 (Scheme)


Состояние 182

   15 ConstructorDef: T_TARROW TypeName ':' . CONSNAME ';'

    CONSNAME  сдвиг, и переход в состояние 197


Состояние 183

   39 TypeExpressionsList: AtomType .
   40                    | AtomType . ',' TypeExpressionsList

    ','  сдвиг, и переход в состояние 198

    $default  вывод с использованием правила 39 (TypeExpressionsList)


Состояние 184

   30 AtomType: TypeName '[' TypeExpressionsList . ']'

    ']'  сдвиг, и переход в состояние 199


Состояние 185

    7 DataTypeDefinitionsBlock: T_DATA TypeName '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList . '}'

    '}'  сдвиг, и переход в состояние 200


Состояние 186

   16 ConstructorDef: ConstructorParametersList T_TARROW TypeName . ':' CONSNAME ';'

    ':'  сдвиг, и переход в состояние 201


Состояние 187

   18 ConstructorParametersList: AtomType '*' ConstructorParametersList .

    $default  вывод с использованием правила 18 (ConstructorParametersList)


Состояние 188

   24 TypeDefConstructor: ConstructorParametersList '.' ConstructorName .

    $default  вывод с использованием правила 24 (TypeDefConstructor)


Состояние 189

   27 TypeExpression: TypeDefConstructor T_UNION TypeExpression .

    $default  вывод с использованием правила 27 (TypeExpression)


Состояние 190

    8 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' T_CONSTRUCTORS '{' . ConstructorsDefinitionList '}' TypesDefinitionList '}'

    NAME           сдвиг, и переход в состояние 9
    TYPEPARAMNAME  сдвиг, и переход в состояние 43
    T_TSTRING      сдвиг, и переход в состояние 111
    T_TINT         сдвиг, и переход в состояние 112
    T_TUINT        сдвиг, и переход в состояние 113
    T_TSIZE        сдвиг, и переход в состояние 114
    T_TFLOAT       сдвиг, и переход в состояние 115
    T_TDOUBLE      сдвиг, и переход в состояние 116
    T_TBOOL        сдвиг, и переход в состояние 117
    T_TARROW       сдвиг, и переход в состояние 118

    TypeName                    переход в состояние 119
    ConstructorsDefinitionList  переход в состояние 202
    ConstructorDef              переход в состояние 121
    ConstructorParametersList   переход в состояние 122
    AtomType                    переход в состояние 123
    BaseType                    переход в состояние 124
    TypeParameter               переход в состояние 125


Состояние 191

    6 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' TypesDefinitionList '}' .

    $default  вывод с использованием правила 6 (DataTypeDefinitionsBlock)


Состояние 192

   77 ConstructionFun: T_FUN ConstructionFunName $@1 '{' DefinitionsList '}' .

    $default  вывод с использованием правила 77 (ConstructionFun)


Состояние 193

   79 ConstructionFun: T_FUN ConstructionFunName $@2 '[' FormalParametersList ']' . '{' DefinitionsList '}'

    '{'  сдвиг, и переход в состояние 203


Состояние 194

   59 FuncObjectWithParameters: NAME '(' FuncArgumentList ')' .

    $default  вывод с использованием правила 59 (FuncObjectWithParameters)


Состояние 195

   61 FuncArgumentList: FuncParameterName ',' . FuncArgumentList

    NAME        сдвиг, и переход в состояние 170
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    FuncObjectWithParameters  переход в состояние 171
    FuncArgumentList          переход в состояние 204
    FuncParameterName         переход в состояние 173
    ElementaryFunctionName    переход в состояние 174
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 196

   70 ConditionTerm: CompositionTerm T_FARROW CompositionTerm ',' . ConditionTerm

    NAME        сдвиг, и переход в состояние 87
    CONSNAME    сдвиг, и переход в состояние 67
    BFNAME      сдвиг, и переход в состояние 88
    NUMBER      сдвиг, и переход в состояние 68
    REALNUMBER  сдвиг, и переход в состояние 69
    STRING      сдвиг, и переход в состояние 70
    T_TRUE      сдвиг, и переход в состояние 71
    T_FALSE     сдвиг, и переход в состояние 72
    '['         сдвиг, и переход в состояние 89
    '@'         сдвиг, и переход в состояние 90
    '('         сдвиг, и переход в состояние 91
    '~'         сдвиг, и переход в состояние 92

    ConstructorName           переход в состояние 74
    AtomTerm                  переход в состояние 94
    FuncObjectWithParameters  переход в состояние 95
    SequentialTerm            переход в состояние 96
    CompositionTerm           переход в состояние 97
    ConditionTerm             переход в состояние 205
    FuncObjectName            переход в состояние 100
    ElementaryFunctionName    переход в состояние 101
    Constructor               переход в состояние 102
    Destructor                переход в состояние 103
    BuiltInFunction           переход в состояние 104
    TupleElement              переход в состояние 105
    Constant                  переход в состояние 106
    BuiltInFunctionName       переход в состояние 107


Состояние 197

   15 ConstructorDef: T_TARROW TypeName ':' CONSNAME . ';'

    ';'  сдвиг, и переход в состояние 206


Состояние 198

   40 TypeExpressionsList: AtomType ',' . TypeExpressionsList

    NAME           сдвиг, и переход в состояние 9
    TYPEPARAMNAME  сдвиг, и переход в состояние 43
    T_TSTRING      сдвиг, и переход в состояние 111
    T_TINT         сдвиг, и переход в состояние 112
    T_TUINT        сдвиг, и переход в состояние 113
    T_TSIZE        сдвиг, и переход в состояние 114
    T_TFLOAT       сдвиг, и переход в состояние 115
    T_TDOUBLE      сдвиг, и переход в состояние 116
    T_TBOOL        сдвиг, и переход в состояние 117

    TypeName             переход в состояние 119
    AtomType             переход в состояние 183
    BaseType             переход в состояние 124
    TypeExpressionsList  переход в состояние 207
    TypeParameter        переход в состояние 125


Состояние 199

   30 AtomType: TypeName '[' TypeExpressionsList ']' .

    $default  вывод с использованием правила 30 (AtomType)


Состояние 200

    7 DataTypeDefinitionsBlock: T_DATA TypeName '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}' .

    $default  вывод с использованием правила 7 (DataTypeDefinitionsBlock)


Состояние 201

   16 ConstructorDef: ConstructorParametersList T_TARROW TypeName ':' . CONSNAME ';'

    CONSNAME  сдвиг, и переход в состояние 208


Состояние 202

    8 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList . '}' TypesDefinitionList '}'

    '}'  сдвиг, и переход в состояние 209


Состояние 203

   79 ConstructionFun: T_FUN ConstructionFunName $@2 '[' FormalParametersList ']' '{' . DefinitionsList '}'

    NAME   сдвиг, и переход в состояние 27
    T_FUN  сдвиг, и переход в состояние 28
    '@'    сдвиг, и переход в состояние 29

    DefinitionsList  переход в состояние 210
    Definition       переход в состояние 31
    ConstructionFun  переход в состояние 32
    FuncVarName      переход в состояние 33


Состояние 204

   61 FuncArgumentList: FuncParameterName ',' FuncArgumentList .

    $default  вывод с использованием правила 61 (FuncArgumentList)


Состояние 205

   70 ConditionTerm: CompositionTerm T_FARROW CompositionTerm ',' ConditionTerm .

    $default  вывод с использованием правила 70 (ConditionTerm)


Состояние 206

   15 ConstructorDef: T_TARROW TypeName ':' CONSNAME ';' .

    $default  вывод с использованием правила 15 (ConstructorDef)


Состояние 207

   40 TypeExpressionsList: AtomType ',' TypeExpressionsList .

    $default  вывод с использованием правила 40 (TypeExpressionsList)


Состояние 208

   16 ConstructorDef: ConstructorParametersList T_TARROW TypeName ':' CONSNAME . ';'

    ';'  сдвиг, и переход в состояние 211


Состояние 209

    8 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' . TypesDefinitionList '}'

    NAME    сдвиг, и переход в состояние 9
    T_DATA  сдвиг, и переход в состояние 2

    DataTypeDefinitionsBlock  переход в состояние 38
    TypeName                  переход в состояние 39
    TypesDefinitionList       переход в состояние 212
    TypesDefinitionList2      переход в состояние 41
    TypeDefinition            переход в состояние 42


Состояние 210

   79 ConstructionFun: T_FUN ConstructionFunName $@2 '[' FormalParametersList ']' '{' DefinitionsList . '}'

    '}'  сдвиг, и переход в состояние 213


Состояние 211

   16 ConstructorDef: ConstructorParametersList T_TARROW TypeName ':' CONSNAME ';' .

    $default  вывод с использованием правила 16 (ConstructorDef)


Состояние 212

    8 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList . '}'

    '}'  сдвиг, и переход в состояние 214


Состояние 213

   79 ConstructionFun: T_FUN ConstructionFunName $@2 '[' FormalParametersList ']' '{' DefinitionsList '}' .

    $default  вывод с использованием правила 79 (ConstructionFun)


Состояние 214

    8 DataTypeDefinitionsBlock: T_DATA TypeName '[' TypeParametersList ']' '{' T_CONSTRUCTORS '{' ConstructorsDefinitionList '}' TypesDefinitionList '}' .

    $default  вывод с использованием правила 8 (DataTypeDefinitionsBlock)
